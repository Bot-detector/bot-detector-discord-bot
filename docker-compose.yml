services:
  mysql:
    container_name: database
    build:
      context: ./mysql
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root_bot_buster
    volumes:
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./mysql/conf.d:/etc/mysql/conf.d
      # - ./mysql/mount:/var/lib/mysql # creates persistence
    ports:
      - 3307:3306
    networks:
      - botdetector-network
    healthcheck:
      test: "mysqladmin ping -h localhost -u root -proot_bot_buster"
      # during this period fails are not considered
      start_period: 30s
      # time between cmd
      interval: 30s
      # time given to the cmd
      timeout: 5s
  # api:
  #   build:
  #     context: ../Bot-Detector-Core-Files
  #     dockerfile: Dockerfile
  #     args:
  #       root_path: ''
  #       api_port: 5000
  #   image: bot-detector/bd-api:latest
  #   environment:
  #     - sql_uri=mysql+asyncmy://botssuck:botdetector@mysql:3306/playerdata_dev
  #     - discord_sql_uri=mysql+asyncmy://botssuck:botdetector@mysql:3306/discord_dev
  #     - token=verify_ban
  #   volumes:
  #     - '../Bot-Detector-Core-Files/api:/code/api'
  #   ports:
  #     - "5000:5000"
  #   networks:
  #     - botdetector-network
  #   depends_on:
  #     - mysql

  discord:
    build:
      context: ../bot-detector-discord-bot
      dockerfile: Dockerfile
      args:
        root_path: ''
        api_port: 3000
    image: bot-detector/bd-discord:latest
    env_file:
      - .env
    environment:
      # - TOKEN=<YOUR TOKEN HERE>
      - API_TOKEN=verify_ban
      - COMMAND_PREFIX=$
      # - WEBHOOK=
      - API_URL=https://api.prd.osrsbotdetector.com
    ports:
      - "3000:3000"
    networks:
      - botdetector-network
    depends_on:
      - api
networks:
  botdetector-network:
